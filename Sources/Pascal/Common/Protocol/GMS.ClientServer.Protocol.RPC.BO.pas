{*---------------------------------------------------*}
// UpScript Translator (ObjectPascal for StoredObject) AutoGenerated file.
{*---------------------------------------------------*}


Unit GMS.ClientServer.Protocol.RPC.BO;
{*---------------------------------------------------*}
{$IFDEF FPC}
{$mode delphi}
{$ENDIF}


INTERFACE

//Include statement
Uses
  GS.StoredObject.Buffer, GS.StoredObject.BaseTypes, GS.StoredObject.Stream,
  {$IFNDEF FPC}
  System.Generics.collections,
  GS.StoredObject.Core,
  {$ELSE}
  Generics.collections,
  GS.StoredObject.Types_UINT32,
  GS.StoredObject.Core_NonGenerics,
  {$ENDIF }
  classes, sysutils;

{*---------------------------------------------------*}
Type

TGRIDClientServerProtocolRPCBOManager = Class;
TGRIDMessageRPC = Class;
TGRIDMessageRPCAsk = Class;
TGRIDMessageRPCResponse = Class;
TGRIDMessageRPCFail = Class;

//---- Class TGRIDMessageRPC (1 Field(s) and 0 method(s))
TGRIDMessageRPC = Class
Protected
  {$REGION 'StoredObject Technical stuffs for TGRIDMessageRPC'}
  StoredProtoAppClasses : TofStoredObject_UInt32Key; //Pointer
  FObjKeyRef : TData_Def;
  FObjKey : UInt32;
  FBuffer : TData_Def; //stream

  {$ENDREGION}
  Function ClassContractGetterSetter : Boolean;

  Procedure SetObjKeyRef(Value : UInt32);
  Function GetObjKeyRef : UInt32;

  Procedure SetBuffer(Value : TStream);
  Function GetBuffer : TStream;
Public
  Constructor Create(Const aManager : TGRIDClientServerProtocolRPCBOManager); Virtual;
Published
  Property Buffer : TStream read GetBuffer Write SetBuffer;
End;

//---- Class TGRIDMessageRPCAsk (1 Field(s) and 0 method(s))
TGRIDMessageRPCAsk = Class(TGRIDMessageRPC)
Protected
  {$REGION 'StoredObject Technical stuffs for TGRIDMessageRPCAsk'}
  FFonctionName : TData_Def; //string

  {$ENDREGION}
  Function ClassContractGetterSetter : Boolean;
  Procedure SetFonctionName(Value : String);
  Function GetFonctionName : String;
Public
  Constructor Create(Const aManager : TGRIDClientServerProtocolRPCBOManager); Virtual;
Published
  Property FonctionName : String read GetFonctionName Write SetFonctionName;
End;

//---- Class TGRIDMessageRPCResponse (0 Field(s) and 0 method(s))
TGRIDMessageRPCResponse = Class(TGRIDMessageRPC)
  {$REGION 'StoredObject Technical stuffs for TGRIDMessageRPCResponse'}

  {$ENDREGION}
  Function ClassContractGetterSetter : Boolean;
Public
  Constructor Create(Const aManager : TGRIDClientServerProtocolRPCBOManager); Virtual;
End;

//---- Class TGRIDMessageRPCFail (2 Field(s) and 0 method(s))
TGRIDMessageRPCFail = Class
Protected
  {$REGION 'StoredObject Technical stuffs for TGRIDMessageRPCFail'}
  StoredProtoAppClasses : TofStoredObject_UInt32Key; //Pointer
  FObjKeyRef : TData_Def;
  FObjKey : UInt32;
  FFonctionAsked : TData_Def; //string
  FFailReason : TData_Def; //string

  {$ENDREGION}
  Function ClassContractGetterSetter : Boolean;

  Procedure SetObjKeyRef(Value : UInt32);
  Function GetObjKeyRef : UInt32;

  Procedure SetFonctionAsked(Value : String);
  Function GetFonctionAsked : String;
  Procedure SetFailReason(Value : String);
  Function GetFailReason : String;
Public
  Constructor Create(Const aManager : TGRIDClientServerProtocolRPCBOManager); Virtual;
Published
  Property FonctionAsked : String read GetFonctionAsked Write SetFonctionAsked;
  Property FailReason : String read GetFailReason Write SetFailReason;
End;



//------------------------------------------------------------
TGRIDClientServerProtocolRPCBOManager = class(TofStoredObjectClassManager_UInt32)
Protected
  Procedure InternalLoadCommon; Override;
Public
  Constructor Create; Virtual;
  Function BuildObject(aObjectClass : String; Const Guid : UInt32) : TObject; Override;
    Procedure PopulateObject( anObject : TObject; PropertyName, StringValue : String); Override;
    Procedure PopulateObjectStream( anObject : TObject; PropertyName : String; Value : TStream); Override;
  Procedure RegisterClass; Override;

end;


IMPLEMENTATION


//---- Class TGRIDMessageRPC

  Constructor TGRIDMessageRPC.Create(Const aManager : TGRIDClientServerProtocolRPCBOManager);
  Begin
    //Inherited; Must not call to insure class name coherence in AddObject(Self) statement.
    Assert(Assigned(aManager));
    StoredProtoAppClasses :=  TofStoredObject_UInt32Key(aManager.StoredObject);

    FBuffer.FATI := -1;
    StoredProtoAppClasses.AddObject(Self,FobjKey);
    FObjKeyRef.FATI := -1;
    SetObjKeyRef(FObjKey);
  End;

 Function TGRIDMessageRPC.ClassContractGetterSetter : Boolean;
 Begin
   Assert(TObject(Self) Is TGRIDMessageRPC,'TGRIDMessageRPC Expected but '+Self.ClassName+' found.');
   if not(Assigned(StoredProtoAppClasses)) then
     raise Exception.Create('Object not exists anymore (Certainly freed by a TofStoredObject.Clear or Load call or by Persister manupulation).');
   Result := StoredProtoAppClasses.StoredObjectClassManager.Status <> smsLoading;
 end;

  Procedure TGRIDMessageRPC.SetObjKeyRef(Value : UInt32);
  Begin
    if not(ClassContractGetterSetter) then
      Exit;
    StoredProtoAppClasses.SetUInt32(Self, FObjKey,'ObjKeyRef',FObjKeyRef.FATI,FObjKeyRef.FData_Index, Value);
  End;

  Function TGRIDMessageRPC.GetObjKeyRef : UInt32;
  Begin
    if not(ClassContractGetterSetter) then
      Exit;
    StoredProtoAppClasses.GetUInt32(Self, FObjKeyRef.FATI,Result);
  End;

  Procedure TGRIDMessageRPC.SetBuffer(Value : TStream);
  var r : TArrayOfByte;
  Begin
    if not(ClassContractGetterSetter) then
      Exit;
      try
         SetLength(r,Value.Size);
         Value.ReadBuffer(Pointer(r)^,Value.Size);
         StoredProtoAppClasses.SeTArrayOfByte(Self, FObjKey,'Buffer',FBuffer.FATI,FBuffer.FData_Index,r);
      Except
        On E : Exception do
        begin
          Raise Exception.Create('TGRIDMessageRPC.SetBuffer(Value : stream) --> '+E.Message)
        end;
      end;
  End;

  Function TGRIDMessageRPC.GetBuffer : TStream;
  var r : TArrayOfByte;
  Begin
    if not(ClassContractGetterSetter) then
      Exit;
    try
       Result := Nil;
       StoredProtoAppClasses.GetArrayOfByte(Self,FBuffer.FATI,r);
       if length(r)>0 then
       Begin
         Result := TMemoryStream.Create;
         Result.WriteBuffer(Pointer(r)^,Length(r));
       end;
    Except
      On E : Exception do
      begin
        Raise Exception.Create('TGRIDMessageRPC.GetBuffer : stream --> '+E.Message)
      end;
    end;
  End;


//---- Class TGRIDMessageRPCAsk

  Constructor TGRIDMessageRPCAsk.Create(Const aManager : TGRIDClientServerProtocolRPCBOManager);
  Begin
    //Inherited; Must not call to insure class name coherence in AddObject(Self) statement.
    Assert(Assigned(aManager));
    StoredProtoAppClasses :=  TofStoredObject_UInt32Key(aManager.StoredObject);

    FFonctionName.FATI := -1;
    FBuffer.FATI := -1;
    StoredProtoAppClasses.AddObject(Self,FobjKey);
    FObjKeyRef.FATI := -1;
    SetObjKeyRef(FObjKey);
  End;

 Function TGRIDMessageRPCAsk.ClassContractGetterSetter : Boolean;
 Begin
   Assert(TObject(Self) Is TGRIDMessageRPCAsk,'TGRIDMessageRPCAsk Expected but '+Self.ClassName+' found.');
   if not(Assigned(StoredProtoAppClasses)) then
     raise Exception.Create('Object not exists anymore (Certainly freed by a TofStoredObject.Clear or Load call or by Persister manupulation).');
   Result := StoredProtoAppClasses.StoredObjectClassManager.Status <> smsLoading;
 end;

  Procedure TGRIDMessageRPCAsk.SetFonctionName(Value : String);
  Begin
    if not(ClassContractGetterSetter) then
      Exit;
    try
      StoredProtoAppClasses.SetString(Self, FObjKey,'FonctionName',FFonctionName.FATI,FFonctionName.FData_Index,Value);
    Except
      On E : Exception do
      begin
        Raise Exception.Create('TGRIDMessageRPCAsk.SetFonctionName(Value : string) --> '+E.Message)
      end;
    end;
  End;

  Function TGRIDMessageRPCAsk.GetFonctionName : String;
  Begin
    if not(ClassContractGetterSetter) then
      Exit;
    try
      StoredProtoAppClasses.GetString(Self,FFonctionName.FATI,Result);
    Except
      On E : Exception do
      begin
        Raise Exception.Create('TGRIDMessageRPCAsk.GetFonctionName : string --> '+E.Message)
      end;
    end;
  End;


//---- Class TGRIDMessageRPCResponse

  Constructor TGRIDMessageRPCResponse.Create(Const aManager : TGRIDClientServerProtocolRPCBOManager);
  Begin
    //Inherited; Must not call to insure class name coherence in AddObject(Self) statement.
    Assert(Assigned(aManager));
    StoredProtoAppClasses :=  TofStoredObject_UInt32Key(aManager.StoredObject);

    FBuffer.FATI := -1;
    StoredProtoAppClasses.AddObject(Self,FobjKey);
    FObjKeyRef.FATI := -1;
    SetObjKeyRef(FObjKey);
  End;

 Function TGRIDMessageRPCResponse.ClassContractGetterSetter : Boolean;
 Begin
   Assert(TObject(Self) Is TGRIDMessageRPCResponse,'TGRIDMessageRPCResponse Expected but '+Self.ClassName+' found.');
   if not(Assigned(StoredProtoAppClasses)) then
     raise Exception.Create('Object not exists anymore (Certainly freed by a TofStoredObject.Clear or Load call or by Persister manupulation).');
   Result := StoredProtoAppClasses.StoredObjectClassManager.Status <> smsLoading;
 end;


//---- Class TGRIDMessageRPCFail

  Constructor TGRIDMessageRPCFail.Create(Const aManager : TGRIDClientServerProtocolRPCBOManager);
  Begin
    //Inherited; Must not call to insure class name coherence in AddObject(Self) statement.
    Assert(Assigned(aManager));
    StoredProtoAppClasses :=  TofStoredObject_UInt32Key(aManager.StoredObject);

    FFonctionAsked.FATI := -1;
    FFailReason.FATI := -1;
    StoredProtoAppClasses.AddObject(Self,FobjKey);
    FObjKeyRef.FATI := -1;
    SetObjKeyRef(FObjKey);
  End;

 Function TGRIDMessageRPCFail.ClassContractGetterSetter : Boolean;
 Begin
   Assert(TObject(Self) Is TGRIDMessageRPCFail,'TGRIDMessageRPCFail Expected but '+Self.ClassName+' found.');
   if not(Assigned(StoredProtoAppClasses)) then
     raise Exception.Create('Object not exists anymore (Certainly freed by a TofStoredObject.Clear or Load call or by Persister manupulation).');
   Result := StoredProtoAppClasses.StoredObjectClassManager.Status <> smsLoading;
 end;

  Procedure TGRIDMessageRPCFail.SetObjKeyRef(Value : UInt32);
  Begin
    if not(ClassContractGetterSetter) then
      Exit;
    StoredProtoAppClasses.SetUInt32(Self, FObjKey,'ObjKeyRef',FObjKeyRef.FATI,FObjKeyRef.FData_Index, Value);
  End;

  Function TGRIDMessageRPCFail.GetObjKeyRef : UInt32;
  Begin
    if not(ClassContractGetterSetter) then
      Exit;
    StoredProtoAppClasses.GetUInt32(Self, FObjKeyRef.FATI,Result);
  End;

  Procedure TGRIDMessageRPCFail.SetFonctionAsked(Value : String);
  Begin
    if not(ClassContractGetterSetter) then
      Exit;
    try
      StoredProtoAppClasses.SetString(Self, FObjKey,'FonctionAsked',FFonctionAsked.FATI,FFonctionAsked.FData_Index,Value);
    Except
      On E : Exception do
      begin
        Raise Exception.Create('TGRIDMessageRPCFail.SetFonctionAsked(Value : string) --> '+E.Message)
      end;
    end;
  End;

  Function TGRIDMessageRPCFail.GetFonctionAsked : String;
  Begin
    if not(ClassContractGetterSetter) then
      Exit;
    try
      StoredProtoAppClasses.GetString(Self,FFonctionAsked.FATI,Result);
    Except
      On E : Exception do
      begin
        Raise Exception.Create('TGRIDMessageRPCFail.GetFonctionAsked : string --> '+E.Message)
      end;
    end;
  End;

  Procedure TGRIDMessageRPCFail.SetFailReason(Value : String);
  Begin
    if not(ClassContractGetterSetter) then
      Exit;
    try
      StoredProtoAppClasses.SetString(Self, FObjKey,'FailReason',FFailReason.FATI,FFailReason.FData_Index,Value);
    Except
      On E : Exception do
      begin
        Raise Exception.Create('TGRIDMessageRPCFail.SetFailReason(Value : string) --> '+E.Message)
      end;
    end;
  End;

  Function TGRIDMessageRPCFail.GetFailReason : String;
  Begin
    if not(ClassContractGetterSetter) then
      Exit;
    try
      StoredProtoAppClasses.GetString(Self,FFailReason.FATI,Result);
    Except
      On E : Exception do
      begin
        Raise Exception.Create('TGRIDMessageRPCFail.GetFailReason : string --> '+E.Message)
      end;
    end;
  End;


{TGRIDClientServerProtocolRPCBOManager}
//------------------------------------------------------------

Procedure TGRIDClientServerProtocolRPCBOManager.InternalLoadCommon;
var i : integer;
    cl : string;
    FAuditMem : Boolean;
    aTGRIDMessageRPC : TGRIDMessageRPC;
    aTGRIDMessageRPCAsk : TGRIDMessageRPCAsk;
    aTGRIDMessageRPCResponse : TGRIDMessageRPCResponse;
    aTGRIDMessageRPCFail : TGRIDMessageRPCFail;
    CurrentInstanceKey : UInt32;
    aSO : TofStoredObject_UInt32Key;
Begin
  FAuditMem := TofStoredObject_UInt32Key(StoredObject).AuditEnabled;
  TofStoredObject_UInt32Key(StoredObject).AuditEnabled := False;
  CurrentInstanceKey := High(UInt32);
  aSO := TofStoredObject_UInt32Key(StoredObject);
  for i := Low(aSO.AllocationData.TableATI_Int) to High(aSO.AllocationData.TableATI_Int) do
  begin
    //Deleted object is ignored but still exists in the buffer : Ignore it.
    if aSO.AllocationData.TableATI_Int[i].MetaStatus = ToATIMetaStatus.omsDeleted then
      Continue;

    CurrentInstanceKey := aSO.AllocationData.TableATI_Int[i].InstanceIndex;

    if CurrentInstanceKey<>High(UInt32) then
    begin

      if Not( Assigned(aSO.LookForObject(CurrentInstanceKey)) ) then
      begin
        //Object does not exists yet : Build.

        //Create object.
        cl := aSO.DefinitionData.Classes[aSO.AllocationData.TableATI_Int[i].MetaClassIndex].ClassName;
        if cl = 'TGRIDMessageRPC' then
        begin
          aTGRIDMessageRPC := TGRIDMessageRPC.Create(Self); //Instance is adding to RuntimeObjectList in constructor.
          if aTGRIDMessageRPC.FObjKey <> CurrentInstanceKey then //Overriding Key given in constructor
          begin
            aTGRIDMessageRPC.FObjKey := CurrentInstanceKey; //Overriding Key given in constructor
            aSO.ChangeGUID(CurrentInstanceKey, aTGRIDMessageRPC);
          end;
        end
        else
        if cl = 'TGRIDMessageRPCAsk' then
        begin
          aTGRIDMessageRPCAsk := TGRIDMessageRPCAsk.Create(Self); //Instance is adding to RuntimeObjectList in constructor.
          if aTGRIDMessageRPCAsk.FObjKey <> CurrentInstanceKey then //Overriding Key given in constructor
          begin
            aTGRIDMessageRPCAsk.FObjKey := CurrentInstanceKey; //Overriding Key given in constructor
            aSO.ChangeGUID(CurrentInstanceKey, aTGRIDMessageRPCAsk);
          end;
        end
        else
        if cl = 'TGRIDMessageRPCResponse' then
        begin
          aTGRIDMessageRPCResponse := TGRIDMessageRPCResponse.Create(Self); //Instance is adding to RuntimeObjectList in constructor.
          if aTGRIDMessageRPCResponse.FObjKey <> CurrentInstanceKey then //Overriding Key given in constructor
          begin
            aTGRIDMessageRPCResponse.FObjKey := CurrentInstanceKey; //Overriding Key given in constructor
            aSO.ChangeGUID(CurrentInstanceKey, aTGRIDMessageRPCResponse);
          end;
        end
        else
        if cl = 'TGRIDMessageRPCFail' then
        begin
          aTGRIDMessageRPCFail := TGRIDMessageRPCFail.Create(Self); //Instance is adding to RuntimeObjectList in constructor.
          if aTGRIDMessageRPCFail.FObjKey <> CurrentInstanceKey then //Overriding Key given in constructor
          begin
            aTGRIDMessageRPCFail.FObjKey := CurrentInstanceKey; //Overriding Key given in constructor
            aSO.ChangeGUID(CurrentInstanceKey, aTGRIDMessageRPCFail);
          end;
        end
        else
        begin
        end;
      end;

      if aSO.AllocationData.TableATI_Int[i].MetaClassIndex = 0 then //TGRIDMessageRPC
      begin
        aTGRIDMessageRPC := TGRIDMessageRPC(aSO.BusinessObjects[CurrentInstanceKey]);

        if aSO.AllocationData.TableATI_Int[i].MetaPropertyIndex = 0 then //ObjKeyRef from TGRIDMessageRPC class.
        begin
          aTGRIDMessageRPC.FObjKeyRef.FATI := i;
          aTGRIDMessageRPC.FObjKeyRef.FData_Index := aSO.AllocationData.TableATI_Int[i].DataMemoryIndex;
        end
        else
        if aSO.AllocationData.TableATI_Int[i].MetaPropertyIndex = 1 then //Buffer
        begin
          aTGRIDMessageRPC.FBuffer.FATI := i;
          aTGRIDMessageRPC.FBuffer.FData_Index := aSO.AllocationData.TableATI_Int[i].DataMemoryIndex;
        end
        else
        begin
          raise Exception.Create('MetaPropertyIndex Invalid.');
        end;
      end;

      if aSO.AllocationData.TableATI_Int[i].MetaClassIndex = 1 then //TGRIDMessageRPCAsk
      begin
        aTGRIDMessageRPCAsk := TGRIDMessageRPCAsk(aSO.BusinessObjects[CurrentInstanceKey]);

        if aSO.AllocationData.TableATI_Int[i].MetaPropertyIndex = 0 then //ObjKeyRef from TGRIDMessageRPCAsk class.
        begin
          aTGRIDMessageRPCAsk.FObjKeyRef.FATI := i;
          aTGRIDMessageRPCAsk.FObjKeyRef.FData_Index := aSO.AllocationData.TableATI_Int[i].DataMemoryIndex;
        end
        else
        if aSO.AllocationData.TableATI_Int[i].MetaPropertyIndex = 1 then //Buffer from TGRIDMessageRPC class.
        begin
          aTGRIDMessageRPCAsk.FBuffer.FATI := i;
          aTGRIDMessageRPCAsk.FBuffer.FData_Index := aSO.AllocationData.TableATI_Int[i].DataMemoryIndex;
        end
        else
        if aSO.AllocationData.TableATI_Int[i].MetaPropertyIndex = 2 then //FonctionName
        begin
          aTGRIDMessageRPCAsk.FFonctionName.FATI := i;
          aTGRIDMessageRPCAsk.FFonctionName.FData_Index := aSO.AllocationData.TableATI_Int[i].DataMemoryIndex;
        end
        else
        begin
          raise Exception.Create('MetaPropertyIndex Invalid.');
        end;
      end;

      if aSO.AllocationData.TableATI_Int[i].MetaClassIndex = 2 then //TGRIDMessageRPCResponse
      begin
        aTGRIDMessageRPCResponse := TGRIDMessageRPCResponse(aSO.BusinessObjects[CurrentInstanceKey]);

        if aSO.AllocationData.TableATI_Int[i].MetaPropertyIndex = 0 then //ObjKeyRef from TGRIDMessageRPCResponse class.
        begin
          aTGRIDMessageRPCResponse.FObjKeyRef.FATI := i;
          aTGRIDMessageRPCResponse.FObjKeyRef.FData_Index := aSO.AllocationData.TableATI_Int[i].DataMemoryIndex;
        end
        else
        if aSO.AllocationData.TableATI_Int[i].MetaPropertyIndex = 1 then //Buffer from TGRIDMessageRPC class.
        begin
          aTGRIDMessageRPCResponse.FBuffer.FATI := i;
          aTGRIDMessageRPCResponse.FBuffer.FData_Index := aSO.AllocationData.TableATI_Int[i].DataMemoryIndex;
        end
        else
        begin
          raise Exception.Create('MetaPropertyIndex Invalid.');
        end;
      end;

      if aSO.AllocationData.TableATI_Int[i].MetaClassIndex = 3 then //TGRIDMessageRPCFail
      begin
        aTGRIDMessageRPCFail := TGRIDMessageRPCFail(aSO.BusinessObjects[CurrentInstanceKey]);

        if aSO.AllocationData.TableATI_Int[i].MetaPropertyIndex = 0 then //ObjKeyRef from TGRIDMessageRPCFail class.
        begin
          aTGRIDMessageRPCFail.FObjKeyRef.FATI := i;
          aTGRIDMessageRPCFail.FObjKeyRef.FData_Index := aSO.AllocationData.TableATI_Int[i].DataMemoryIndex;
        end
        else
        if aSO.AllocationData.TableATI_Int[i].MetaPropertyIndex = 1 then //FonctionAsked
        begin
          aTGRIDMessageRPCFail.FFonctionAsked.FATI := i;
          aTGRIDMessageRPCFail.FFonctionAsked.FData_Index := aSO.AllocationData.TableATI_Int[i].DataMemoryIndex;
        end
        else
        if aSO.AllocationData.TableATI_Int[i].MetaPropertyIndex = 2 then //FailReason
        begin
          aTGRIDMessageRPCFail.FFailReason.FATI := i;
          aTGRIDMessageRPCFail.FFailReason.FData_Index := aSO.AllocationData.TableATI_Int[i].DataMemoryIndex;
        end
        else
        begin
          raise Exception.Create('MetaPropertyIndex Invalid.');
        end;
      end;


    end
    else
    begin
      Break; //End of array list in Instance = -1
    end;
  end;
  TofStoredObject_UInt32Key(StoredObject).AuditEnabled := FAuditMem;
  StoredObject.SetModified(False);
end;

Function TGRIDClientServerProtocolRPCBOManager.BuildObject(aObjectClass : String; Const Guid : UInt32) : TObject;
var i : Integer;
    FAuditMem : Boolean;
Begin
  FAuditMem := TofStoredObject_UInt32Key(StoredObject).AuditEnabled;
  TofStoredObject_UInt32Key(StoredObject).AuditEnabled := False;
 if aObjectClass = 'TGRIDMessageRPC' then
 begin
   Result := TGRIDMessageRPC.Create(Self);
   if guid <> High(UInt32) then
   begin
     TGRIDMessageRPC(Result).FObjKey := Guid;
     StoredObject.ChangeGUID(Guid, Result);
   end;
 end;
 if aObjectClass = 'TGRIDMessageRPCAsk' then
 begin
   Result := TGRIDMessageRPCAsk.Create(Self);
   if guid <> High(UInt32) then
   begin
     TGRIDMessageRPCAsk(Result).FObjKey := Guid;
     StoredObject.ChangeGUID(Guid, Result);
   end;
 end;
 if aObjectClass = 'TGRIDMessageRPCResponse' then
 begin
   Result := TGRIDMessageRPCResponse.Create(Self);
   if guid <> High(UInt32) then
   begin
     TGRIDMessageRPCResponse(Result).FObjKey := Guid;
     StoredObject.ChangeGUID(Guid, Result);
   end;
 end;
 if aObjectClass = 'TGRIDMessageRPCFail' then
 begin
   Result := TGRIDMessageRPCFail.Create(Self);
   if guid <> High(UInt32) then
   begin
     TGRIDMessageRPCFail(Result).FObjKey := Guid;
     StoredObject.ChangeGUID(Guid, Result);
   end;
 end;
  TofStoredObject_UInt32Key(StoredObject).AuditEnabled := FAuditMem;
end;

Constructor TGRIDClientServerProtocolRPCBOManager.Create;
Begin
  StoredObject := TofStoredObject_UInt32Key.Create;
  TofStoredObject_UInt32Key(StoredObject).StoredObjectClassManager := Self;
  RegisterClass;
end;

Procedure TGRIDClientServerProtocolRPCBOManager.PopulateObject( anObject : TObject; PropertyName, StringValue : String);
var i : integer;
    s : TStringList;
    ls : TList<String>;
Begin
if anObject Is TGRIDMessageRPC then
begin
  //if Lowercase(PropertyName) = 'buffer' then
  //begin
  //  TGRIDMessageRPC(anObject).Buffer := ToStream(StringValue);
  //end;
end;
if anObject Is TGRIDMessageRPCAsk then
begin
  if Lowercase(PropertyName) = 'fonctionname' then
  begin
    TGRIDMessageRPCAsk(anObject).FonctionName := StringValue;
  end;
end;
if anObject Is TGRIDMessageRPCResponse then
begin
end;
if anObject Is TGRIDMessageRPCFail then
begin
  if Lowercase(PropertyName) = 'fonctionasked' then
  begin
    TGRIDMessageRPCFail(anObject).FonctionAsked := StringValue;
  end;
  if Lowercase(PropertyName) = 'failreason' then
  begin
    TGRIDMessageRPCFail(anObject).FailReason := StringValue;
  end;
end;
end;
Procedure TGRIDClientServerProtocolRPCBOManager.PopulateObjectStream( anObject : TObject; PropertyName : String; Value : TStream);
Begin
if anObject Is TGRIDMessageRPC then
begin
  if Lowercase(PropertyName) = 'buffer' then
  begin
    Value.Position := 0;
    TGRIDMessageRPC(anObject).Buffer := Value;
  end;
end;
if anObject Is TGRIDMessageRPCAsk then
begin
end;
if anObject Is TGRIDMessageRPCResponse then
begin
end;
if anObject Is TGRIDMessageRPCFail then
begin
end;
end;

Procedure TGRIDClientServerProtocolRPCBOManager.RegisterClass;
Begin
  StoredObject.ClearAllData(True);
  StoredObject.RegisterClass('TGRIDMessageRPC');
  StoredObject.RegisterProperty('TGRIDMessageRPC','ObjKeyRef',ofssString);
  StoredObject.RegisterProperty('TGRIDMessageRPC','Buffer',ofssBlob);
  StoredObject.RegisterClass('TGRIDMessageRPCAsk');
  StoredObject.RegisterProperty('TGRIDMessageRPCAsk','ObjKeyRef',ofssString);
  StoredObject.RegisterProperty('TGRIDMessageRPCAsk','Buffer',ofssBlob); //From TGRIDMessageRPC
  StoredObject.RegisterProperty('TGRIDMessageRPCAsk','FonctionName',ofssString);
  StoredObject.RegisterClass('TGRIDMessageRPCResponse');
  StoredObject.RegisterProperty('TGRIDMessageRPCResponse','ObjKeyRef',ofssString);
  StoredObject.RegisterProperty('TGRIDMessageRPCResponse','Buffer',ofssBlob); //From TGRIDMessageRPC
  StoredObject.RegisterClass('TGRIDMessageRPCFail');
  StoredObject.RegisterProperty('TGRIDMessageRPCFail','ObjKeyRef',ofssString);
  StoredObject.RegisterProperty('TGRIDMessageRPCFail','FonctionAsked',ofssString);
  StoredObject.RegisterProperty('TGRIDMessageRPCFail','FailReason',ofssString);
end;



End.


//--------- Original UpScript
{
project name GRIDClientServerProtocolRPCBO

include classes sysutils

def forward
TGRIDMessageRPC
  TGRIDMessageRPCAsk
  TGRIDMessageRPCResponse
  TGRIDMessageRPCFail
end

define class TGRIDMessageRPC
Buffer stream
end

define class TGRIDMessageRPCAsk herits from TGRIDMessageRPC
FonctionName string
end

define class TGRIDMessageRPCResponse herits from TGRIDMessageRPC
end

define class TGRIDMessageRPCFail
FonctionAsked FailReason string
end

}

